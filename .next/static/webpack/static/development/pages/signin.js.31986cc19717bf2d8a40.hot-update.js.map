{"version":3,"file":"static/webpack/static/development/pages/signin.js.31986cc19717bf2d8a40.hot-update.js","sources":["webpack:///./pages/signin.js"],"sourcesContent":["import React from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed,\n  saveUid,\n} from '../redux/actions';\nimport { Button, Input } from '../components';\nimport { withFirebase } from '../HOCs';\nimport * as cache from '../lib/cache';\n\nimport '../lib/index.css';\n\nclass SignInPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      submitting: false,\n      error: null\n    };\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    pageLoading();\n    console.log('props ', this.props);\n  }\n\n  onSubmit = () => {\n    const { email, password } = this.state;\n\n    console.log('email ', email);\n    console.log('password ', password);\n\n    this.setState({\n      submitting: true\n    });\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(res => {\n        const { uid } = res.user;\n        cache.saveToCache('uid', uid);\n        this.setState({ email: '', password: '' });\n        Router.push('/home');\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { submitting, error } = this.state;\n    console.log('this state ', this.state);\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Sign In: </h1>\n        <Input\n          name=\"email\"\n          title=\"email\"\n          onChange={this.onChange}\n          placeholder=\"abc@abc.com\"\n        />\n        <Input\n          name=\"password\"\n          title=\"password\"\n          onChange={this.onChange}\n          placeholder=\"password here\"\n        />\n        <Button text=\"Submit\" onClick={this.onSubmit} color=\"grey\" />\n\n        {submitting && <p>Signing In..</p>}\n        {error && <p>{error.message}</p>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed()),\n  updateStateSaveUid: () => dispatch(saveUid()),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(SignInPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AA9CA;AAiDA;AACA;AACA;AAjDA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AAEA;AACA;AACA;;;AA6BA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AALA;AAZA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AApGA;AACA;AAsGA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AACA;AAMA;;;;A","sourceRoot":""}