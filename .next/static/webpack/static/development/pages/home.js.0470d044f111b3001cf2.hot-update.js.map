{"version":3,"file":"static/webpack/static/development/pages/home.js.0470d044f111b3001cf2.hot-update.js","sources":["webpack:///./pages/home.js"],"sourcesContent":["import React from 'react';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed\n} from '../redux/actions';\nimport * as cache from '../lib/cache';\nimport '../lib/index.css';\nimport withAuthentication from '../HOCs/with-auth';\n\nclass HomePage extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    const { reduxUID } = this.props;\n    const cacheUID = cache.getFromCache('uid');\n    // pageLoading();\n    console.log('props ', this.props);\n\n    // NEXT = vv put redux uid and/or cache uid from firebase as condition that bounces it back to signin.\n    if (!reduxUID && !cacheUID) {\n      Router.push('/signin')\n    }\n  }\n\n  signOut = () => {\n    this.props.signOut();\n  }\n\n  componentWillReceiveProps = nextProps => {\n    console.log('nextProps: ', nextProps);\n  }\n\n\n  render() {\n\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Home</h1>\n        <button onClick={this.signOut}>Sign Out</button>\n        <p>you can only see me if youre logged in</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error,\n  reduxUID: state.signIn.uid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(homePageLoading()),\n  pageLoaded: () => dispatch(homePageLoaded()),\n  pageFailed: () => dispatch(homePageFailed())\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withAuthentication,\n  connect(mapStateToProps, mapDispatchToProps),\n)(HomePage)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA6BA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AAjCA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAWA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AALA;AAZA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAvEA;AACA;AAyEA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}