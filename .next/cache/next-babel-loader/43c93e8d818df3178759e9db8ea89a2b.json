{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/signin.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import fetch from 'isomorphic-unfetch';\n\nimport { NextSeo } from 'next-seo';\nimport { connect } from 'react-redux';\nimport { signInPageLoading, signInPageLoaded, signInPageFailed } from '../redux/actions';\nimport Input from '../components/Input';\n\nvar SignInPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignInPage, _React$Component);\n\n  function SignInPage() {\n    _classCallCheck(this, SignInPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SignInPage).apply(this, arguments));\n  }\n\n  _createClass(SignInPage, [{\n    key: \"componentDidMount\",\n    //   static async getInitialProps({ req }) {\n    //     // const isServer = !!req\n    //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    //     const json = await res.json();\n    //     return {\n    //       users: json\n    //     };\n    //   }\n    value: function componentDidMount() {\n      var pageLoading = this.props.pageLoading;\n      pageLoading();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(NextSeo, {\n        openGraph: {\n          type: 'website',\n          url: 'https://www.thePandaRiot.com/gigs',\n          title: 'Sign In',\n          description: 'Sign in to the panda riot open mic comedy webapp!',\n          images: [{\n            url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt'\n          }, {\n            url: 'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt 2'\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Sign In: \"), \";\", __jsx(Input, {\n        title: \"email\",\n        onChange: function onChange(e) {\n          return console.log(e);\n        },\n        placeholder: \"abc@abc.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), __jsx(Input, {\n        title: \"password\",\n        onChange: function onChange(e) {\n          return console.log(e);\n        },\n        placeholder: \"password here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SignInPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.signIn.loading,\n    error: state.signIn.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    pageLoading: function pageLoading() {\n      return dispatch(signInPageLoading());\n    },\n    pageLoaded: function pageLoaded() {\n      return dispatch(signInPageLoaded());\n    },\n    pageFailed: function pageFailed() {\n      return dispatch(signInPageFailed());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/signin.js"],"names":["React","NextSeo","connect","signInPageLoading","signInPageLoaded","signInPageFailed","Input","SignInPage","pageLoading","props","type","url","title","description","images","width","height","alt","e","console","log","Component","mapStateToProps","state","loading","signIn","error","mapDispatchToProps","dispatch","pageLoaded","pageFailed"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,qBAAlB;;IAEMC,U;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;wCAEoB;AAAA,UACVC,WADU,GACM,KAAKC,KADX,CACVD,WADU;AAElBA,MAAAA,WAAW;AACZ;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,SAAS,EAAE;AACTE,UAAAA,IAAI,EAAE,SADG;AAETC,UAAAA,GAAG,EAAE,mCAFI;AAGTC,UAAAA,KAAK,EAAE,SAHE;AAITC,UAAAA,WAAW,EAAE,mDAJJ;AAKTC,UAAAA,MAAM,EAAE,CACN;AACEH,YAAAA,GAAG,EAAE,kDADP;AAEEI,YAAAA,KAAK,EAAE,GAFT;AAGEC,YAAAA,MAAM,EAAE,GAHV;AAIEC,YAAAA,GAAG,EAAE;AAJP,WADM,EAON;AACEN,YAAAA,GAAG,EACD,8EAFJ;AAGEI,YAAAA,KAAK,EAAE,GAHT;AAIEC,YAAAA,MAAM,EAAE,GAJV;AAKEC,YAAAA,GAAG,EAAE;AALP,WAPM;AALC,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAxBF,OAyBE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,SAFb;AAGE,QAAA,WAAW,EAAC,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA8BE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,SAFb;AAGE,QAAA,WAAW,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,CADF;AAuCD;;;;EAxDsBlB,KAAK,CAACqB,S;;AA2D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaD,OADU;AAEhCE,IAAAA,KAAK,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAFY,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCpB,IAAAA,WAAW,EAAE;AAAA,aAAMoB,QAAQ,CAACzB,iBAAiB,EAAlB,CAAd;AAAA,KADyB;AAEtC0B,IAAAA,UAAU,EAAE;AAAA,aAAMD,QAAQ,CAACxB,gBAAgB,EAAjB,CAAd;AAAA,KAF0B;AAGtC0B,IAAAA,UAAU,EAAE;AAAA,aAAMF,QAAQ,CAACvB,gBAAgB,EAAjB,CAAd;AAAA;AAH0B,GAAL;AAAA,CAAnC;;AAMA,eAAeH,OAAO,CACpBoB,eADoB,EAEpBK,kBAFoB,CAAP,CAGbpB,UAHa,CAAf","sourcesContent":["import React from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { connect } from 'react-redux';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed\n} from '../redux/actions';\nimport Input from '../components/Input';\n\nclass SignInPage extends React.Component {\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    pageLoading();\n  }\n\n  render() {\n    return (\n      <div>\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1>Sign In: </h1>;\n        <Input\n          title=\"email\"\n          onChange={e => console.log(e)}\n          placeholder=\"abc@abc.com\"\n        />\n        <Input\n          title=\"password\"\n          onChange={e => console.log(e)}\n          placeholder=\"password here\"\n        />\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignInPage);\n"]},"metadata":{},"sourceType":"module"}