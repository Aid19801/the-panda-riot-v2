{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/home.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { signInPageLoading, signInPageLoaded, signInPageFailed } from '../redux/actions';\nimport * as cache from '../lib/cache';\nimport '../lib/index.css';\nimport withAuthentication from '../HOCs/with-auth';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"signOut\", function () {\n      _this.props.signOut();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      console.log('nextProps: ', nextProps);\n    });\n\n    _this.state = {};\n    return _this;\n  } //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n\n  _createClass(HomePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pageLoading = this.props.pageLoading;\n      var reduxUID = this.props.reduxUID;\n      var cacheUID = cache.getFromCache('uid'); // pageLoading();\n\n      console.log('props ', this.props); // NEXT = vv put redux uid and/or cache uid from firebase as condition that bounces it back to signin.\n\n      if (!reduxUID && !cacheUID) {\n        Router.push('/signin');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(NextSeo, {\n        openGraph: {\n          type: 'website',\n          url: 'https://www.thePandaRiot.com/gigs',\n          title: 'Sign In',\n          description: 'Sign in to the panda riot open mic comedy webapp!',\n          images: [{\n            url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt'\n          }, {\n            url: 'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt 2'\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        className: \"funky-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Home\"), __jsx(\"button\", {\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Sign Out\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"you can only see me if youre logged in\"));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.signIn.loading,\n    error: state.signIn.error,\n    reduxUID: state.signIn.uid\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    pageLoading: function pageLoading() {\n      return dispatch(homePageLoading());\n    },\n    pageLoaded: function pageLoaded() {\n      return dispatch(homePageLoaded());\n    },\n    pageFailed: function pageFailed() {\n      return dispatch(homePageFailed());\n    }\n  };\n};\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withAuthentication, connect(mapStateToProps, mapDispatchToProps))(HomePage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/home.js"],"names":["React","NextSeo","compose","connect","Router","signInPageLoading","signInPageLoaded","signInPageFailed","cache","withAuthentication","HomePage","props","signOut","nextProps","console","log","state","pageLoading","reduxUID","cacheUID","getFromCache","push","type","url","title","description","images","width","height","alt","Component","mapStateToProps","loading","signIn","error","uid","mapDispatchToProps","dispatch","homePageLoading","pageLoaded","homePageLoaded","pageFailed","homePageFailed","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed\n} from '../redux/actions';\nimport * as cache from '../lib/cache';\nimport '../lib/index.css';\nimport withAuthentication from '../HOCs/with-auth';\n\nclass HomePage extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    const { reduxUID } = this.props;\n    const cacheUID = cache.getFromCache('uid');\n    // pageLoading();\n    console.log('props ', this.props);\n\n    // NEXT = vv put redux uid and/or cache uid from firebase as condition that bounces it back to signin.\n    if (!reduxUID && !cacheUID) {\n      Router.push('/signin')\n    }\n  }\n\n  signOut = () => {\n    this.props.signOut();\n  }\n\n  componentWillReceiveProps = nextProps => {\n    console.log('nextProps: ', nextProps);\n  }\n\n\n  render() {\n\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Home</h1>\n        <button onClick={this.signOut}>Sign Out</button>\n        <p>you can only see me if youre logged in</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error,\n  reduxUID: state.signIn.uid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(homePageLoading()),\n  pageLoaded: () => dispatch(homePageLoaded()),\n  pageFailed: () => dispatch(homePageFailed())\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withAuthentication,\n  connect(mapStateToProps, mapDispatchToProps),\n)(HomePage)\n"]},"metadata":{},"sourceType":"module"}