{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport Router from 'next/router';\n\nvar withAuthentication = function withAuthentication(Component) {\n  var withAuthentication =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(withAuthentication, _React$Component);\n\n    function withAuthentication(props) {\n      var _this;\n\n      _classCallCheck(this, withAuthentication);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(withAuthentication).call(this, props));\n\n      _defineProperty(_assertThisInitialized(_this), \"ifNotAuthRouteToSignIn\", function () {\n        _this.setState({\n          authUser: null\n        });\n\n        Router.push('/signin');\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"ifAuthSaveToCache\", function (authUser) {\n        _this.setState({\n          authUser: authUser\n        });\n\n        return cache.saveToCache('uid', authUser.uid);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"signOut\", function () {\n        cache.clearFromCache('uid', '');\n        Router.push('/signin');\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"signIn\", function (email, password) {\n        _this.props.firebase.doSignInWithEmailAndPassword(email, password).then(function (res) {\n          var uid = res.user.uid;\n          cache.saveToCache('uid', uid);\n          return uid;\n        })[\"catch\"](function (error) {\n          _this.setState({\n            error: error\n          });\n        });\n      });\n\n      _this.state = {\n        authUser: null\n      };\n      return _this;\n    }\n\n    _createClass(withAuthentication, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.listener = this.props.firebase.auth.onAuthStateChanged(function (authUser) {\n          authUser ? _this2.ifAuthSaveToCache(authUser) : _this2.ifNotAuthRouteToSignIn();\n        }); // this.ifNotAuthRouteToSignIn();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.listener();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var authUser = this.state.authUser;\n        return __jsx(Component, _extends({}, this.props, {\n          authUser: authUser,\n          signOut: this.signOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return withAuthentication;\n  }(React.Component);\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js"],"names":["React","withFirebase","cache","Router","withAuthentication","Component","props","setState","authUser","push","saveToCache","uid","clearFromCache","email","password","firebase","doSignInWithEmailAndPassword","then","res","user","error","state","listener","auth","onAuthStateChanged","ifAuthSaveToCache","ifNotAuthRouteToSignIn","signOut"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,GAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,kBAAkB,GAAG,4BAAAC,SAAS,EAAI;AAAA,MAChCD,kBADgC;AAAA;AAAA;AAAA;;AAEpC,gCAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;;AADiB,+EAgBM,YAAM;AAC7B,cAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE;AADE,SAAd;;AAGAL,QAAAA,MAAM,CAACM,IAAP,CAAY,SAAZ;AACD,OArBkB;;AAAA,0EAuBC,UAAAD,QAAQ,EAAI;AAC9B,cAAKD,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAARA;AAAF,SAAd;;AACA,eAAON,KAAK,CAACQ,WAAN,CAAkB,KAAlB,EAAyBF,QAAQ,CAACG,GAAlC,CAAP;AACD,OA1BkB;;AAAA,gEAgCT,YAAM;AACdT,QAAAA,KAAK,CAACU,cAAN,CAAqB,KAArB,EAA4B,EAA5B;AACAT,QAAAA,MAAM,CAACM,IAAP,CAAY,SAAZ;AACD,OAnCkB;;AAAA,+DAqCV,UAACI,KAAD,EAAQC,QAAR,EAAqB;AAC5B,cAAKR,KAAL,CAAWS,QAAX,CACGC,4BADH,CACgCH,KADhC,EACuCC,QADvC,EAEGG,IAFH,CAEQ,UAAAC,GAAG,EAAI;AAAA,cACHP,GADG,GACKO,GAAG,CAACC,IADT,CACHR,GADG;AAEXT,UAAAA,KAAK,CAACQ,WAAN,CAAkB,KAAlB,EAAyBC,GAAzB;AACA,iBAAOA,GAAP;AACD,SANH,WAOS,UAAAS,KAAK,EAAI;AACd,gBAAKb,QAAL,CAAc;AAAEa,YAAAA,KAAK,EAALA;AAAF,WAAd;AACD,SATH;AAUD,OAhDkB;;AAEjB,YAAKC,KAAL,GAAa;AACXb,QAAAA,QAAQ,EAAE;AADC,OAAb;AAFiB;AAKlB;;AAPmC;AAAA;AAAA,0CAShB;AAAA;;AAClB,aAAKc,QAAL,GAAgB,KAAKhB,KAAL,CAAWS,QAAX,CAAoBQ,IAApB,CAAyBC,kBAAzB,CAA4C,UAAAhB,QAAQ,EAAI;AACtEA,UAAAA,QAAQ,GACJ,MAAI,CAACiB,iBAAL,CAAuBjB,QAAvB,CADI,GAEJ,MAAI,CAACkB,sBAAL,EAFJ;AAGD,SAJe,CAAhB,CADkB,CAMlB;AACD;AAhBmC;AAAA;AAAA,6CA8Bb;AACrB,aAAKJ,QAAL;AACD;AAhCmC;AAAA;AAAA,+BAoD3B;AAAA,YACCd,QADD,GACc,KAAKa,KADnB,CACCb,QADD;AAEP,eACE,MAAC,SAAD,eAAe,KAAKF,KAApB;AAA2B,UAAA,QAAQ,EAAEE,QAArC;AAA+C,UAAA,OAAO,EAAE,KAAKmB,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD;AAzDmC;;AAAA;AAAA,IACL3B,KAAK,CAACK,SADD;;AA4DtC,SAAOJ,YAAY,CAACG,kBAAD,CAAnB;AACD,CA7DD;;AA+DA,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport Router from 'next/router';\n\nconst withAuthentication = Component => {\n  class withAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.ifAuthSaveToCache(authUser)\n          : this.ifNotAuthRouteToSignIn();\n      });\n      // this.ifNotAuthRouteToSignIn();\n    }\n\n    ifNotAuthRouteToSignIn = () => {\n      this.setState({\n        authUser: null\n      });\n      Router.push('/signin');\n    };\n\n    ifAuthSaveToCache = authUser => {\n      this.setState({ authUser });\n      return cache.saveToCache('uid', authUser.uid);\n    };\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    signOut = () => {\n      cache.clearFromCache('uid', '');\n      Router.push('/signin');\n    };\n\n    signIn = (email, password) => {\n      this.props.firebase\n        .doSignInWithEmailAndPassword(email, password)\n        .then(res => {\n          const { uid } = res.user;\n          cache.saveToCache('uid', uid);\n          return uid;\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    };\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <Component {...this.props} authUser={authUser} signOut={this.signOut} />\n      );\n    }\n  }\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;\n"]},"metadata":{},"sourceType":"module"}