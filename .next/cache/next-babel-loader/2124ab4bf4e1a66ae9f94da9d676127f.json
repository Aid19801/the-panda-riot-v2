{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport { Router } from 'next/router';\n\nconst withAuthentication = Component => {\n  class withAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"ifNotAuthRouteToSignIn\", () => {\n        this.setState({\n          authUser: null\n        });\n        Router.push('/signin');\n      });\n\n      _defineProperty(this, \"ifAuthSaveToCache\", authUser => {\n        this.setState({\n          authUser\n        });\n        return cache.saveToCache('uid', authUser.uid);\n      });\n\n      _defineProperty(this, \"signOut\", () => {\n        cache.clearFromCache('uid', '');\n        Router.push('/signin');\n      });\n\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser ? this.ifAuthSaveToCache(authUser) : this.ifNotAuthRouteToSignIn();\n      }); // this.ifNotAuthRouteToSignIn();\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const {\n        authUser\n      } = this.state;\n      return __jsx(Component, _extends({}, this.props, {\n        authUser: authUser,\n        signOut: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js"],"names":["React","withFirebase","cache","Router","withAuthentication","Component","constructor","props","setState","authUser","push","saveToCache","uid","clearFromCache","state","componentDidMount","listener","firebase","auth","onAuthStateChanged","ifAuthSaveToCache","ifNotAuthRouteToSignIn","componentWillUnmount","render","signOut"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,GAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACpC,QAAMD,kBAAN,SAAiCJ,KAAK,CAACK,SAAvC,CAAiD;AAC7CC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,sDAiBM,MAAM;AAC3B,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGAN,QAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ;AACH,OAtBkB;;AAAA,iDAwBED,QAAD,IAAc;AAC9B,aAAKD,QAAL,CAAc;AAAEC,UAAAA;AAAF,SAAd;AACA,eAAOP,KAAK,CAACS,WAAN,CAAkB,KAAlB,EAAyBF,QAAQ,CAACG,GAAlC,CAAP;AACH,OA3BkB;;AAAA,uCAiCT,MAAM;AACZV,QAAAA,KAAK,CAACW,cAAN,CAAqB,KAArB,EAA4B,EAA5B;AACAV,QAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ;AACH,OApCkB;;AAEf,WAAKI,KAAL,GAAa;AACXL,QAAAA,QAAQ,EAAE;AADC,OAAb;AAGH;;AAEDM,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,QAAL,GAAgB,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CAA4CV,QAAQ,IAAI;AACtEA,QAAAA,QAAQ,GACJ,KAAKW,iBAAL,CAAuBX,QAAvB,CADI,GAEJ,KAAKY,sBAAL,EAFJ;AAGD,OAJe,CAAhB,CADgB,CAMhB;AACH;;AAeDC,IAAAA,oBAAoB,GAAG;AACnB,WAAKN,QAAL;AACH;;AASDO,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEd,QAAAA;AAAF,UAAe,KAAKK,KAA1B;AACA,aAAO,MAAC,SAAD,eAAe,KAAKP,KAApB;AAA2B,QAAA,QAAQ,EAAEE,QAArC;AAA+C,QAAA,OAAO,EAAE,KAAKe,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AA5C4C;;AA+CjD,SAAOvB,YAAY,CAACG,kBAAD,CAAnB;AACH,CAjDD;;AAmDA,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport { Router } from 'next/router';\n\nconst withAuthentication = Component => {\n    class withAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n              authUser: null,\n            }\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n              authUser\n                ? this.ifAuthSaveToCache(authUser)\n                : this.ifNotAuthRouteToSignIn()\n            });\n            // this.ifNotAuthRouteToSignIn();\n        }\n\n\n        ifNotAuthRouteToSignIn = () => {\n            this.setState({\n                authUser: null,\n            });\n            Router.push('/signin');\n        }\n\n        ifAuthSaveToCache = (authUser) => {\n            this.setState({ authUser });\n            return cache.saveToCache('uid', authUser.uid);\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        signOut = () => {\n            cache.clearFromCache('uid', '');\n            Router.push('/signin')\n        }\n\n        \n\n        render() {\n            const { authUser } = this.state;\n            return <Component {...this.props} authUser={authUser} signOut={this.signOut}/>\n        }\n    }\n\n    return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;"]},"metadata":{},"sourceType":"module"}