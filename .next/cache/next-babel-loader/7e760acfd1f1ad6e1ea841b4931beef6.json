{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    _defineProperty(this, \"doCreateUserWithEmailAndPassword\", (email, password) => {\n      return this.auth.createUserWithEmailAndPassword(email, password);\n    });\n\n    _defineProperty(this, \"doSignInWithEmailAndPassword\", (email, password) => {\n      return this.auth.signInWithEmailAndPassword(email, password);\n    });\n\n    _defineProperty(this, \"doSignOut\", () => this.auth.signOut());\n\n    _defineProperty(this, \"doPasswordReset\", email => this.auth.sendPasswordResetEmail(email));\n\n    _defineProperty(this, \"doPasswordUpdate\", password => this.auth.currentUser.updatePassword(password));\n\n    _defineProperty(this, \"meQuery\", () => {\n      this.auth.onAuthStateChanged(user => {\n        if (user) {\n          return user;\n        } else {\n          return console.log('no one signed in');\n        }\n      });\n    });\n\n    _defineProperty(this, \"user\", uid => this.db.ref(`users/${uid}`));\n\n    _defineProperty(this, \"users\", () => this.db.ref(`users`));\n\n    !app.apps.length ? app.initializeApp(config) : app.app(); // app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  } // Firebase *Authentication*\n  // create user\n\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/firebase.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MSG_SENDER_ID","Firebase","constructor","email","password","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","currentUser","updatePassword","onAuthStateChanged","user","console","log","uid","db","ref","apps","length","initializeApp","database"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJV;AAKbC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALd;AAMbC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANlB,CAAf;;AASA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,8DAWqB,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtD,aAAO,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAAP;AACD,KAba;;AAAA,0DAgBiB,CAACD,KAAD,EAAQC,QAAR,KAAqB;AAClD,aAAO,KAAKC,IAAL,CAAUE,0BAAV,CAAqCJ,KAArC,EAA4CC,QAA5C,CAAP;AACD,KAlBa;;AAAA,uCAoBF,MAAM,KAAKC,IAAL,CAAUG,OAAV,EApBJ;;AAAA,6CAuBIL,KAAK,IAAI,KAAKE,IAAL,CAAUI,sBAAV,CAAiCN,KAAjC,CAvBb;;AAAA,8CA0BKC,QAAQ,IAAI,KAAKC,IAAL,CAAUK,WAAV,CAAsBC,cAAtB,CAAqCP,QAArC,CA1BjB;;AAAA,qCA6BJ,MAAM;AACd,WAAKC,IAAL,CAAUO,kBAAV,CAA6BC,IAAI,IAAI;AACnC,YAAIA,IAAJ,EAAU;AACR,iBAAOA,IAAP;AACD,SAFD,MAEO;AACL,iBAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAP;AACD;AACF,OAND;AAOD,KArCa;;AAAA,kCAwCPC,GAAG,IAAI,KAAKC,EAAL,CAAQC,GAAR,CAAa,SAAQF,GAAI,EAAzB,CAxCA;;AAAA,mCAyCN,MAAM,KAAKC,EAAL,CAAQC,GAAR,CAAa,OAAb,CAzCA;;AACZ,KAACjC,GAAG,CAACkC,IAAJ,CAASC,MAAV,GAAmBnC,GAAG,CAACoC,aAAJ,CAAkBnC,MAAlB,CAAnB,GAA+CD,GAAG,CAACA,GAAJ,EAA/C,CADY,CAGZ;;AACA,SAAKoB,IAAL,GAAYpB,GAAG,CAACoB,IAAJ,EAAZ;AACA,SAAKY,EAAL,GAAUhC,GAAG,CAACqC,QAAJ,EAAV;AACD,GAPY,CASb;AAEA;;;AAXa;;AA6Cf,eAAerB,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    !app.apps.length ? app.initializeApp(config) : app.app();\n\n    // app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // Firebase *Authentication*\n\n  // create user\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  // sign-in user\n  doSignInWithEmailAndPassword = (email, password) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n  // sign-out user\n  doSignOut = () => this.auth.signOut();\n\n  // pw re-set\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  // pw update\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // get me\n  meQuery = () => {\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        return user;\n      } else {\n        return console.log('no one signed in');\n      }\n    });\n  };\n\n  // Firebase *Database*\n  user = uid => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref(`users`);\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}