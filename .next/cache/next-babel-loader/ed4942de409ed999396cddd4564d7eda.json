{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\nvar sagaMiddleware = createSagaMiddleware();\n\nvar initializeStore = function initializeStore(initialState) {\n  // Make exception for redux dev tools\n\n  /* eslint-disable no-underscore-dangle */\n\n  /* eslint-disable no-undef */\n  var composeEnhancers = true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  /* eslint-enable */\n\n  var store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n  store.runSaga = function () {\n    // Avoid running twice\n    if (store.saga) return;\n    store.saga = sagaMiddleware.run(rootSaga);\n  };\n\n  store.stopSaga =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (store.saga) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            store.dispatch(END);\n            _context.next = 5;\n            return store.saga.done;\n\n          case 5:\n            store.saga = null;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  store.execSagaTasks =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(isServer, tasks) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // run saga\n              store.runSaga(); // dispatch saga tasks\n\n              tasks(store.dispatch); // Stop running and wait for the tasks to be done\n\n              _context2.next = 4;\n              return store.stopSaga();\n\n            case 4:\n              // Re-run on client side\n              if (!isServer) {\n                store.runSaga();\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Initial run\n\n\n  store.runSaga();\n  return store;\n};\n\nexport default initializeStore;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/redux/store.js"],"names":["createStore","applyMiddleware","combineReducers","compose","createSagaMiddleware","END","reducers","rootSaga","sagaMiddleware","initializeStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","runSaga","saga","run","stopSaga","dispatch","done","execSagaTasks","isServer","tasks"],"mappings":";;AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,OAJF,QAKO,OALP;AAMA,OAAOC,oBAAP,IAA+BC,GAA/B,QAA0C,YAA1C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,IAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;;AAEA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAAkB;AACxC;;AACA;;AACA;AACA,MAAMC,gBAAgB,GAAI,QAAiCC,MAAM,CAACC,oCAAzC,IAAkFV,OAA3G;AACA;;AACA,MAAMW,KAAK,GAAGd,WAAW,CACvBM,QADuB,EAEvBI,YAFuB,EAGvBC,gBAAgB,CAACV,eAAe,CAACO,cAAD,CAAhB,CAHO,CAAzB;;AAMAM,EAAAA,KAAK,CAACC,OAAN,GAAgB,YAAM;AACpB;AACA,QAAID,KAAK,CAACE,IAAV,EAAgB;AAChBF,IAAAA,KAAK,CAACE,IAAN,GAAaR,cAAc,CAACS,GAAf,CAAmBV,QAAnB,CAAb;AACD,GAJD;;AAMAO,EAAAA,KAAK,CAACI,QAAN;AAAA;AAAA;AAAA;AAAA,2BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEVJ,KAAK,CAACE,IAFI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGfF,YAAAA,KAAK,CAACK,QAAN,CAAed,GAAf;AAHe;AAAA,mBAITS,KAAK,CAACE,IAAN,CAAWI,IAJF;;AAAA;AAKfN,YAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQAF,EAAAA,KAAK,CAACO,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsB,kBAAOC,QAAP,EAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA;AACpB;AACAT,cAAAA,KAAK,CAACC,OAAN,GAFoB,CAGpB;;AACAQ,cAAAA,KAAK,CAACT,KAAK,CAACK,QAAP,CAAL,CAJoB,CAKpB;;AALoB;AAAA,qBAMdL,KAAK,CAACI,QAAN,EANc;;AAAA;AAOpB;AACA,kBAAI,CAACI,QAAL,EAAe;AACbR,gBAAAA,KAAK,CAACC,OAAN;AACD;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA,MA1BwC,CAuCxC;;;AACAD,EAAAA,KAAK,CAACC,OAAN;AAEA,SAAOD,KAAP;AACD,CA3CD;;AA6CA,eAAeL,eAAf","sourcesContent":["import {\n  createStore,\n  applyMiddleware,\n  combineReducers,\n  compose,\n} from 'redux';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initializeStore = (initialState) => {\n  // Make exception for redux dev tools\n  /* eslint-disable no-underscore-dangle */\n  /* eslint-disable no-undef */\n  const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  /* eslint-enable */\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(sagaMiddleware)),\n  );\n\n  store.runSaga = () => {\n    // Avoid running twice\n    if (store.saga) return;\n    store.saga = sagaMiddleware.run(rootSaga);\n  };\n\n  store.stopSaga = async () => {\n    // Avoid running twice\n    if (!store.saga) return;\n    store.dispatch(END);\n    await store.saga.done;\n    store.saga = null;\n  };\n\n  store.execSagaTasks = async (isServer, tasks) => {\n    // run saga\n    store.runSaga();\n    // dispatch saga tasks\n    tasks(store.dispatch);\n    // Stop running and wait for the tasks to be done\n    await store.stopSaga();\n    // Re-run on client side\n    if (!isServer) {\n      store.runSaga();\n    }\n  };\n\n  // Initial run\n  store.runSaga();\n\n  return store;\n};\n\nexport default initializeStore;\n"]},"metadata":{},"sourceType":"module"}