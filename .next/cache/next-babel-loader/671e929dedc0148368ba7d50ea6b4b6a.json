{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/signin.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import fetch from 'isomorphic-unfetch';\n\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { signInPageLoading, signInPageLoaded, signInPageFailed } from '../redux/actions';\nimport { Button, Input } from '../components';\nimport { withFirebase } from '../HOCs';\nimport '../lib/index.css';\n\nvar SignInPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignInPage, _React$Component);\n\n  function SignInPage() {\n    var _this;\n\n    _classCallCheck(this, SignInPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInPage).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      console.log('email ', email);\n      console.log('password ', password);\n\n      _this.setState({\n        submitting: true\n      });\n\n      _this.props.firebase.doSignInWithEmailAndPassword(email, password).then(function (res) {\n        console.log('res is ', res);\n\n        _this.setState({\n          email: '',\n          password: ''\n        });\n\n        Router.push('/home');\n      })[\"catch\"](function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    });\n\n    _this.state = {\n      email: '',\n      password: '',\n      submitting: false,\n      error: null\n    };\n    return _this;\n  } //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n\n  _createClass(SignInPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pageLoading = this.props.pageLoading;\n      pageLoading();\n      console.log('props ', this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          submitting = _this$state2.submitting,\n          error = _this$state2.error;\n      console.log('this state ', this.state);\n      return __jsx(\"div\", {\n        id: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(NextSeo, {\n        openGraph: {\n          type: 'website',\n          url: 'https://www.thePandaRiot.com/gigs',\n          title: 'Sign In',\n          description: 'Sign in to the panda riot open mic comedy webapp!',\n          images: [{\n            url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt'\n          }, {\n            url: 'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt 2'\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        className: \"funky-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Sign In: \"), __jsx(Input, {\n        name: \"email\",\n        title: \"email\",\n        onChange: this.onChange,\n        placeholder: \"abc@abc.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), __jsx(Input, {\n        name: \"password\",\n        title: \"password\",\n        onChange: this.onChange,\n        placeholder: \"password here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), __jsx(Button, {\n        text: \"Submit\",\n        onClick: this.onSubmit,\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), submitting && __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Signing In..\"), error && __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return SignInPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.signIn.loading,\n    error: state.signIn.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    pageLoading: function pageLoading() {\n      return dispatch(signInPageLoading());\n    },\n    pageLoaded: function pageLoaded() {\n      return dispatch(signInPageLoaded());\n    },\n    pageFailed: function pageFailed() {\n      return dispatch(signInPageFailed());\n    }\n  };\n};\n\nexport default compose(withFirebase, connect(mapStateToProps, mapDispatchToProps))(SignInPage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/signin.js"],"names":["React","NextSeo","compose","connect","Router","signInPageLoading","signInPageLoaded","signInPageFailed","Button","Input","withFirebase","SignInPage","state","email","password","console","log","setState","submitting","props","firebase","doSignInWithEmailAndPassword","then","res","push","error","event","target","name","value","pageLoading","type","url","title","description","images","width","height","alt","onChange","onSubmit","message","Component","mapStateToProps","loading","signIn","mapDispatchToProps","dispatch","pageLoaded","pageFailed"],"mappings":"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","sourcesContent":["import React from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed\n} from '../redux/actions';\nimport { Button, Input } from '../components';\nimport { withFirebase } from '../HOCs';\n\nimport '../lib/index.css';\n\nclass SignInPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      submitting: false,\n      error: null\n    };\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    pageLoading();\n    console.log('props ', this.props);\n  }\n\n  onSubmit = () => {\n    const { email, password } = this.state;\n\n    console.log('email ', email);\n    console.log('password ', password);\n\n    this.setState({\n      submitting: true\n    });\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(res => {\n        console.log('res is ', res);\n        this.setState({ email: '', password: '' });\n        Router.push('/home');\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { submitting, error } = this.state;\n    console.log('this state ', this.state);\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Sign In: </h1>\n        <Input\n          name=\"email\"\n          title=\"email\"\n          onChange={this.onChange}\n          placeholder=\"abc@abc.com\"\n        />\n        <Input\n          name=\"password\"\n          title=\"password\"\n          onChange={this.onChange}\n          placeholder=\"password here\"\n        />\n        <Button text=\"Submit\" onClick={this.onSubmit} color=\"grey\" />\n\n        {submitting && <p>Signing In..</p>}\n        {error && <p>{error.message}</p>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed())\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(SignInPage);\n"]},"metadata":{},"sourceType":"module"}