{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/home.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { signInPageLoading, signInPageLoaded, signInPageFailed } from '../redux/actions';\nimport '../lib/index.css';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this));\n    _this.state = {};\n    return _this;\n  } //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n\n  _createClass(HomePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pageLoading = this.props.pageLoading;\n      var reduxUID = this.props.reduxUID;\n      var cacheUID = cache.getFromCache('uid'); // pageLoading();\n\n      console.log('props ', this.props); // NEXT = vv put redux uid and/or cache uid from firebase as condition that bounces it back to signin.\n\n      if (!reduxUID || !cacheUID) {\n        Router.push('/signin');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(NextSeo, {\n        openGraph: {\n          type: 'website',\n          url: 'https://www.thePandaRiot.com/gigs',\n          title: 'Sign In',\n          description: 'Sign in to the panda riot open mic comedy webapp!',\n          images: [{\n            url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt'\n          }, {\n            url: 'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt 2'\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        className: \"funky-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Home\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"you can only see me if youre logged in\"));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.signIn.loading,\n    error: state.signIn.error,\n    reduxUID: state.signIn.uid\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    pageLoading: function pageLoading() {\n      return dispatch(signInPageLoading());\n    },\n    pageLoaded: function pageLoaded() {\n      return dispatch(signInPageLoaded());\n    },\n    pageFailed: function pageFailed() {\n      return dispatch(signInPageFailed());\n    }\n  };\n};\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(connect(mapStateToProps, null))(HomePage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/home.js"],"names":["React","NextSeo","compose","connect","Router","signInPageLoading","signInPageLoaded","signInPageFailed","HomePage","state","pageLoading","props","reduxUID","cacheUID","cache","getFromCache","console","log","push","type","url","title","description","images","width","height","alt","Component","mapStateToProps","loading","signIn","error","uid","mapDispatchToProps","dispatch","pageLoaded","pageFailed","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed\n} from '../redux/actions';\n\nimport '../lib/index.css';\n\nclass HomePage extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    const { reduxUID } = this.props;\n    const cacheUID = cache.getFromCache('uid');\n    // pageLoading();\n    console.log('props ', this.props);\n\n    // NEXT = vv put redux uid and/or cache uid from firebase as condition that bounces it back to signin.\n    if (!reduxUID || !cacheUID) {\n      Router.push('/signin')\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Home</h1>\n        \n        <p>you can only see me if youre logged in</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error,\n  reduxUID: state.signIn.uid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed())\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps, null),\n)(HomePage)\n"]},"metadata":{},"sourceType":"module"}