{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nvar config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\n};\n\nvar Firebase = function Firebase() {\n  var _this = this;\n\n  _classCallCheck(this, Firebase);\n\n  _defineProperty(this, \"doCreateUserWithEmailAndPassword\", function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  });\n\n  _defineProperty(this, \"doSignInWithEmailAndPassword\", function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  });\n\n  _defineProperty(this, \"doSignOut\", function () {\n    return _this.auth.signOut();\n  });\n\n  _defineProperty(this, \"doPasswordReset\", function (email) {\n    return _this.auth.sendPasswordResetEmail(email);\n  });\n\n  _defineProperty(this, \"doPasswordUpdate\", function (password) {\n    return _this.auth.currentUser.updatePassword(password);\n  });\n\n  _defineProperty(this, \"meQuery\", function () {\n    _this.auth.onAuthStateChanged(function (user) {\n      if (user) {\n        return user;\n      } else {\n        return console.log('no one signed in');\n      }\n    });\n  });\n\n  _defineProperty(this, \"user\", function (uid) {\n    return _this.db.ref(\"users/\".concat(uid));\n  });\n\n  _defineProperty(this, \"users\", function () {\n    return _this.db.ref(\"users\");\n  });\n\n  !app.apps.length ? app.initializeApp(config) : app.app(); // app.initializeApp(config);\n\n  this.auth = app.auth();\n  this.db = app.database();\n} // Firebase *Authentication*\n// create user\n;\n\nexport default Firebase;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/firebase.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MSG_SENDER_ID","Firebase","email","password","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","currentUser","updatePassword","onAuthStateChanged","user","console","log","uid","db","ref","apps","length","initializeApp","database"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJV;AAKbC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALd;AAMbC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANlB,CAAf;;IASMC,Q,GACJ,oBAAc;AAAA;;AAAA;;AAAA,4DAWqB,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACtD,WAAO,KAAI,CAACC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAAP;AACD,GAba;;AAAA,wDAgBiB,UAACD,KAAD,EAAQC,QAAR,EAAqB;AAClD,WAAO,KAAI,CAACC,IAAL,CAAUE,0BAAV,CAAqCJ,KAArC,EAA4CC,QAA5C,CAAP;AACD,GAlBa;;AAAA,qCAoBF;AAAA,WAAM,KAAI,CAACC,IAAL,CAAUG,OAAV,EAAN;AAAA,GApBE;;AAAA,2CAuBI,UAAAL,KAAK;AAAA,WAAI,KAAI,CAACE,IAAL,CAAUI,sBAAV,CAAiCN,KAAjC,CAAJ;AAAA,GAvBT;;AAAA,4CA0BK,UAAAC,QAAQ;AAAA,WAAI,KAAI,CAACC,IAAL,CAAUK,WAAV,CAAsBC,cAAtB,CAAqCP,QAArC,CAAJ;AAAA,GA1Bb;;AAAA,mCA6BJ,YAAM;AACd,IAAA,KAAI,CAACC,IAAL,CAAUO,kBAAV,CAA6B,UAAAC,IAAI,EAAI;AACnC,UAAIA,IAAJ,EAAU;AACR,eAAOA,IAAP;AACD,OAFD,MAEO;AACL,eAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAP;AACD;AACF,KAND;AAOD,GArCa;;AAAA,gCAwCP,UAAAC,GAAG;AAAA,WAAI,KAAI,CAACC,EAAL,CAAQC,GAAR,iBAAqBF,GAArB,EAAJ;AAAA,GAxCI;;AAAA,iCAyCN;AAAA,WAAM,KAAI,CAACC,EAAL,CAAQC,GAAR,SAAN;AAAA,GAzCM;;AACZ,GAAChC,GAAG,CAACiC,IAAJ,CAASC,MAAV,GAAmBlC,GAAG,CAACmC,aAAJ,CAAkBlC,MAAlB,CAAnB,GAA+CD,GAAG,CAACA,GAAJ,EAA/C,CADY,CAGZ;;AACA,OAAKmB,IAAL,GAAYnB,GAAG,CAACmB,IAAJ,EAAZ;AACA,OAAKY,EAAL,GAAU/B,GAAG,CAACoC,QAAJ,EAAV;AACD,C,CAED;AAEA;;;AAkCF,eAAepB,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    !app.apps.length ? app.initializeApp(config) : app.app();\n\n    // app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // Firebase *Authentication*\n\n  // create user\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  // sign-in user\n  doSignInWithEmailAndPassword = (email, password) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n  // sign-out user\n  doSignOut = () => this.auth.signOut();\n\n  // pw re-set\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  // pw update\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // get me\n  meQuery = () => {\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        return user;\n      } else {\n        return console.log('no one signed in');\n      }\n    });\n  };\n\n  // Firebase *Database*\n  user = uid => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref(`users`);\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}