{"ast":null,"code":"var _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { connect } from 'react-redux';\nimport { startApp } from '../redux/actions';\n\nclass HomePage extends React.Component {\n  static async getInitialProps({\n    req\n  }) {\n    // const isServer = !!req\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const json = await res.json();\n    return {\n      users: json\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateStateStartApp\n    } = this.props;\n    updateStateStartApp();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(NextSeo, {\n      openGraph: {\n        type: 'website',\n        url: 'https://www.thePandaRiot.com/gigs',\n        title: 'FUCK OFF TITLE',\n        description: 'Open Graph Description',\n        images: [{\n          url: 'https://www.example.ie/og-image.jpg',\n          width: 800,\n          height: 600,\n          alt: 'Og Image Alt'\n        }, {\n          url: 'https://www.example.ie/og-image-2.jpg',\n          width: 800,\n          height: 600,\n          alt: 'Og Image Alt 2'\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"users: \", this.props.users && this.props.users.length), \";\");\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateStateStartApp: () => dispatch(startApp())\n});\n\nexport default connect(null, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/index.js"],"names":["React","fetch","NextSeo","connect","startApp","HomePage","Component","getInitialProps","req","res","json","users","componentDidMount","updateStateStartApp","props","render","type","url","title","description","images","width","height","alt","length","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrC,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAAvB;AACA,UAAMS,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEA,WAAO;AACLC,MAAAA,KAAK,EAAED;AADF,KAAP;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAA0B,KAAKC,KAArC;AACAD,IAAAA,mBAAmB;AACpB;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,GAAG,EAAE,mCAFI;AAGTC,QAAAA,KAAK,EAAE,gBAHE;AAITC,QAAAA,WAAW,EAAE,wBAJJ;AAKTC,QAAAA,MAAM,EAAE,CACN;AACEH,UAAAA,GAAG,EAAE,qCADP;AAEEI,UAAAA,KAAK,EAAE,GAFT;AAGEC,UAAAA,MAAM,EAAE,GAHV;AAIEC,UAAAA,GAAG,EAAE;AAJP,SADM,EAON;AACEN,UAAAA,GAAG,EAAE,uCADP;AAEEI,UAAAA,KAAK,EAAE,GAFT;AAGEC,UAAAA,MAAM,EAAE,GAHV;AAIEC,UAAAA,GAAG,EAAE;AAJP,SAPM;AALC,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKT,KAAL,CAAWH,KAAX,IAAoB,KAAKG,KAAL,CAAWH,KAAX,CAAiBa,MAAjD,CAvBF,MADF;AA2BD;;AA5CoC;;AA+CvC,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,mBAAmB,EAAE,MAAMa,QAAQ,CAACtB,QAAQ,EAAT;AADG,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACpB,IADoB,EAEpBsB,kBAFoB,CAAP,CAGbpB,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { connect } from 'react-redux';\nimport { startApp } from '../redux/actions';\n\nclass HomePage extends React.Component {\n  static async getInitialProps({ req }) {\n    // const isServer = !!req\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const json = await res.json();\n\n    return {\n      users: json\n    };\n  }\n\n  componentDidMount() {\n    const { updateStateStartApp } = this.props;\n    updateStateStartApp();\n  }\n\n  render() {\n    return (\n      <div>\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'FUCK OFF TITLE',\n            description: 'Open Graph Description',\n            images: [\n              {\n                url: 'https://www.example.ie/og-image.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url: 'https://www.example.ie/og-image-2.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1>users: {this.props.users && this.props.users.length}</h1>;\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateStateStartApp: () => dispatch(startApp())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}