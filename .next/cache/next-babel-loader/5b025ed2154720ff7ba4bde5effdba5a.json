{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/signin.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import fetch from 'isomorphic-unfetch';\n\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { signInPageLoading, signInPageLoaded, signInPageFailed, saveUid } from '../redux/actions';\nimport { Button, Input } from '../components';\nimport { withFirebase } from '../HOCs';\nimport * as cache from '../lib/cache';\nimport '../lib/index.css';\n\nclass SignInPage extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"onSubmit\", () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        updateStateSaveUid\n      } = this.props;\n      console.log('email ', email);\n      console.log('password ', password);\n      this.setState({\n        submitting: true\n      });\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(res => {\n        const {\n          uid\n        } = res.user;\n        cache.saveToCache('uid', uid);\n        this.setState({\n          email: '',\n          password: ''\n        });\n        Router.push('/home');\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n    });\n\n    _defineProperty(this, \"onChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    });\n\n    this.state = {\n      email: '',\n      password: '',\n      submitting: false,\n      error: null\n    };\n  } //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n\n  componentDidMount() {\n    const {\n      pageLoading\n    } = this.props;\n    pageLoading();\n    console.log('props ', this.props);\n  }\n\n  render() {\n    const {\n      submitting,\n      error\n    } = this.state;\n    console.log('this state ', this.state);\n    return __jsx(\"div\", {\n      id: \"page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(NextSeo, {\n      openGraph: {\n        type: 'website',\n        url: 'https://www.thePandaRiot.com/gigs',\n        title: 'Sign In',\n        description: 'Sign in to the panda riot open mic comedy webapp!',\n        images: [{\n          url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n          width: 800,\n          height: 600,\n          alt: 'Og Image Alt'\n        }, {\n          url: 'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n          width: 800,\n          height: 600,\n          alt: 'Og Image Alt 2'\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      className: \"funky-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Sign In: \"), __jsx(Input, {\n      name: \"email\",\n      title: \"email\",\n      onChange: this.onChange,\n      placeholder: \"abc@abc.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), __jsx(Input, {\n      name: \"password\",\n      title: \"password\",\n      onChange: this.onChange,\n      placeholder: \"password here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), __jsx(Button, {\n      text: \"Submit\",\n      onClick: this.onSubmit,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), submitting && __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Signing In..\"), error && __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed()),\n  updateStateSaveUid: uid => dispatch(saveUid(uid))\n});\n\nexport default compose(withFirebase, connect(mapStateToProps, mapDispatchToProps))(SignInPage);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/signin.js"],"names":["React","NextSeo","compose","connect","Router","signInPageLoading","signInPageLoaded","signInPageFailed","saveUid","Button","Input","withFirebase","cache","SignInPage","Component","constructor","email","password","state","updateStateSaveUid","props","console","log","setState","submitting","firebase","doSignInWithEmailAndPassword","then","res","uid","user","saveToCache","push","catch","error","event","target","name","value","componentDidMount","pageLoading","render","type","url","title","description","images","width","height","alt","onChange","onSubmit","message","mapStateToProps","loading","signIn","mapDispatchToProps","dispatch","pageLoaded","pageFailed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,OAJF,QAKO,kBALP;AAMA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBb,KAAK,CAACc,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;;AADY,sCAyBH,MAAM;AACf,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAyB,KAAKC,KAApC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAzB;AAEA,WAAKM,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE;AADA,OAAd;AAGA,WAAKJ,KAAL,CAAWK,QAAX,CACGC,4BADH,CACgCV,KADhC,EACuCC,QADvC,EAEGU,IAFH,CAEQC,GAAG,IAAI;AACX,cAAM;AAAEC,UAAAA;AAAF,YAAUD,GAAG,CAACE,IAApB;AACAlB,QAAAA,KAAK,CAACmB,WAAN,CAAkB,KAAlB,EAAyBF,GAAzB;AACA,aAAKN,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACAb,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ;AACD,OAPH,EAQGC,KARH,CAQSC,KAAK,IAAI;AACd,aAAKX,QAAL,CAAc;AAAEW,UAAAA;AAAF,SAAd;AACD,OAVH;AAWD,KA7Ca;;AAAA,sCA+CHC,KAAK,IAAI;AAClB,WAAKZ,QAAL,CAAc;AAAE,SAACY,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAApC,OAAd;AACD,KAjDa;;AAEZ,SAAKpB,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXO,MAAAA,UAAU,EAAE,KAHD;AAIXU,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD,GATsC,CAUvC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAK,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKpB,KAA7B;AACAoB,IAAAA,WAAW;AACXnB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKF,KAA3B;AACD;;AA4BDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,UAAF;AAAcU,MAAAA;AAAd,QAAwB,KAAKhB,KAAnC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKJ,KAAhC;AACA,WACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,SAAS,EAAE;AACTwB,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,GAAG,EAAE,mCAFI;AAGTC,QAAAA,KAAK,EAAE,SAHE;AAITC,QAAAA,WAAW,EAAE,mDAJJ;AAKTC,QAAAA,MAAM,EAAE,CACN;AACEH,UAAAA,GAAG,EAAE,kDADP;AAEEI,UAAAA,KAAK,EAAE,GAFT;AAGEC,UAAAA,MAAM,EAAE,GAHV;AAIEC,UAAAA,GAAG,EAAE;AAJP,SADM,EAON;AACEN,UAAAA,GAAG,EACD,8EAFJ;AAGEI,UAAAA,KAAK,EAAE,GAHT;AAIEC,UAAAA,MAAM,EAAE,GAJV;AAKEC,UAAAA,GAAG,EAAE;AALP,SAPM;AALC,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAwBE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxBF,EAyBE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,MAAA,WAAW,EAAC,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA+BE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,QAAQ,EAAE,KAAKA,QAHjB;AAIE,MAAA,WAAW,EAAC,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAqCE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKC,QAApC;AAA8C,MAAA,KAAK,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,EAuCG3B,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvCjB,EAwCGU,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACkB,OAAV,CAxCZ,CADF;AA4CD;;AAnGsC;;AAsGzC,MAAMC,eAAe,GAAGnC,KAAK,KAAK;AAChCoC,EAAAA,OAAO,EAAEpC,KAAK,CAACqC,MAAN,CAAaD,OADU;AAEhCpB,EAAAA,KAAK,EAAEhB,KAAK,CAACqC,MAAN,CAAarB;AAFY,CAAL,CAA7B;;AAKA,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACpD,iBAAiB,EAAlB,CADW;AAEtCqD,EAAAA,UAAU,EAAE,MAAMD,QAAQ,CAACnD,gBAAgB,EAAjB,CAFY;AAGtCqD,EAAAA,UAAU,EAAE,MAAMF,QAAQ,CAAClD,gBAAgB,EAAjB,CAHY;AAItCY,EAAAA,kBAAkB,EAAEU,GAAG,IAAI4B,QAAQ,CAACjD,OAAO,CAACqB,GAAD,CAAR;AAJG,CAAL,CAAnC;;AAOA,eAAe3B,OAAO,CACpBS,YADoB,EAEpBR,OAAO,CACLkD,eADK,EAELG,kBAFK,CAFa,CAAP,CAMb3C,UANa,CAAf","sourcesContent":["import React from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { NextSeo } from 'next-seo';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport {\n  signInPageLoading,\n  signInPageLoaded,\n  signInPageFailed,\n  saveUid\n} from '../redux/actions';\nimport { Button, Input } from '../components';\nimport { withFirebase } from '../HOCs';\nimport * as cache from '../lib/cache';\n\nimport '../lib/index.css';\n\nclass SignInPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      submitting: false,\n      error: null\n    };\n  }\n  //   static async getInitialProps({ req }) {\n  //     // const isServer = !!req\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  //     const json = await res.json();\n\n  //     return {\n  //       users: json\n  //     };\n  //   }\n\n  componentDidMount() {\n    const { pageLoading } = this.props;\n    pageLoading();\n    console.log('props ', this.props);\n  }\n\n  onSubmit = () => {\n    const { email, password } = this.state;\n    const { updateStateSaveUid } = this.props;\n    console.log('email ', email);\n    console.log('password ', password);\n\n    this.setState({\n      submitting: true\n    });\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(res => {\n        const { uid } = res.user;\n        cache.saveToCache('uid', uid);\n        this.setState({ email: '', password: '' });\n        Router.push('/home');\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { submitting, error } = this.state;\n    console.log('this state ', this.state);\n    return (\n      <div id=\"page-container\">\n        <NextSeo\n          openGraph={{\n            type: 'website',\n            url: 'https://www.thePandaRiot.com/gigs',\n            title: 'Sign In',\n            description: 'Sign in to the panda riot open mic comedy webapp!',\n            images: [\n              {\n                url: 'https://i.ytimg.com/vi/kQBHzHBMlM4/hqdefault.jpg',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt'\n              },\n              {\n                url:\n                  'https://pbs.twimg.com/profile_images/498909008292347904/8EkJ3yZ-_400x400.png',\n                width: 800,\n                height: 600,\n                alt: 'Og Image Alt 2'\n              }\n            ]\n          }}\n        />\n        <h1 className=\"funky-title\">Sign In: </h1>\n        <Input\n          name=\"email\"\n          title=\"email\"\n          onChange={this.onChange}\n          placeholder=\"abc@abc.com\"\n        />\n        <Input\n          name=\"password\"\n          title=\"password\"\n          onChange={this.onChange}\n          placeholder=\"password here\"\n        />\n        <Button text=\"Submit\" onClick={this.onSubmit} color=\"grey\" />\n\n        {submitting && <p>Signing In..</p>}\n        {error && <p>{error.message}</p>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.signIn.loading,\n  error: state.signIn.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pageLoading: () => dispatch(signInPageLoading()),\n  pageLoaded: () => dispatch(signInPageLoaded()),\n  pageFailed: () => dispatch(signInPageFailed()),\n  updateStateSaveUid: uid => dispatch(saveUid(uid))\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(SignInPage);\n"]},"metadata":{},"sourceType":"module"}