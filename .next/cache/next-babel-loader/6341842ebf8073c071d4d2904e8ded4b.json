{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport Router from 'next/router';\n\nconst withAuthentication = Component => {\n  class withAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"ifNotAuthRouteToSignIn\", () => {\n        this.setState({\n          authUser: null\n        });\n        Router.push('/signin');\n      });\n\n      _defineProperty(this, \"ifAuthSaveToCache\", authUser => {\n        this.setState({\n          authUser\n        });\n        return cache.saveToCache('uid', authUser.uid);\n      });\n\n      _defineProperty(this, \"signOut\", () => {\n        cache.clearFromCache('uid', '');\n        Router.push('/signin');\n      });\n\n      _defineProperty(this, \"signIn\", (email, password) => {\n        this.props.firebase.doSignInWithEmailAndPassword(email, password).then(res => {\n          const {\n            uid\n          } = res.user;\n          cache.saveToCache('uid', uid);\n          return uid;\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      });\n\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser ? this.ifAuthSaveToCache(authUser) : this.ifNotAuthRouteToSignIn();\n      }); // this.ifNotAuthRouteToSignIn();\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const {\n        authUser\n      } = this.state;\n      return __jsx(Component, _extends({}, this.props, {\n        authUser: authUser,\n        signOut: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/with-auth.js"],"names":["React","withFirebase","cache","Router","withAuthentication","Component","constructor","props","setState","authUser","push","saveToCache","uid","clearFromCache","email","password","firebase","doSignInWithEmailAndPassword","then","res","user","catch","error","state","componentDidMount","listener","auth","onAuthStateChanged","ifAuthSaveToCache","ifNotAuthRouteToSignIn","componentWillUnmount","render","signOut"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,GAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACtC,QAAMD,kBAAN,SAAiCJ,KAAK,CAACK,SAAvC,CAAiD;AAC/CC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;;AADiB,sDAgBM,MAAM;AAC7B,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGAN,QAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ;AACD,OArBkB;;AAAA,iDAuBCD,QAAQ,IAAI;AAC9B,aAAKD,QAAL,CAAc;AAAEC,UAAAA;AAAF,SAAd;AACA,eAAOP,KAAK,CAACS,WAAN,CAAkB,KAAlB,EAAyBF,QAAQ,CAACG,GAAlC,CAAP;AACD,OA1BkB;;AAAA,uCAgCT,MAAM;AACdV,QAAAA,KAAK,CAACW,cAAN,CAAqB,KAArB,EAA4B,EAA5B;AACAV,QAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ;AACD,OAnCkB;;AAAA,sCAqCV,CAACI,KAAD,EAAQC,QAAR,KAAqB;AAC5B,aAAKR,KAAL,CAAWS,QAAX,CACGC,4BADH,CACgCH,KADhC,EACuCC,QADvC,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACX,gBAAM;AAAEP,YAAAA;AAAF,cAAUO,GAAG,CAACC,IAApB;AACAlB,UAAAA,KAAK,CAACS,WAAN,CAAkB,KAAlB,EAAyBC,GAAzB;AACA,iBAAOA,GAAP;AACD,SANH,EAOGS,KAPH,CAOSC,KAAK,IAAI;AACd,eAAKd,QAAL,CAAc;AAAEc,YAAAA;AAAF,WAAd;AACD,SATH;AAUD,OAhDkB;;AAEjB,WAAKC,KAAL,GAAa;AACXd,QAAAA,QAAQ,EAAE;AADC,OAAb;AAGD;;AAEDe,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKlB,KAAL,CAAWS,QAAX,CAAoBU,IAApB,CAAyBC,kBAAzB,CAA4ClB,QAAQ,IAAI;AACtEA,QAAAA,QAAQ,GACJ,KAAKmB,iBAAL,CAAuBnB,QAAvB,CADI,GAEJ,KAAKoB,sBAAL,EAFJ;AAGD,OAJe,CAAhB,CADkB,CAMlB;AACD;;AAcDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKL,QAAL;AACD;;AAoBDM,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEtB,QAAAA;AAAF,UAAe,KAAKc,KAA1B;AACA,aACE,MAAC,SAAD,eAAe,KAAKhB,KAApB;AAA2B,QAAA,QAAQ,EAAEE,QAArC;AAA+C,QAAA,OAAO,EAAE,KAAKuB,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAxD8C;;AA2DjD,SAAO/B,YAAY,CAACG,kBAAD,CAAnB;AACD,CA7DD;;AA+DA,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { withFirebase } from '.';\nimport * as cache from '../lib/cache';\nimport Router from 'next/router';\n\nconst withAuthentication = Component => {\n  class withAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.ifAuthSaveToCache(authUser)\n          : this.ifNotAuthRouteToSignIn();\n      });\n      // this.ifNotAuthRouteToSignIn();\n    }\n\n    ifNotAuthRouteToSignIn = () => {\n      this.setState({\n        authUser: null\n      });\n      Router.push('/signin');\n    };\n\n    ifAuthSaveToCache = authUser => {\n      this.setState({ authUser });\n      return cache.saveToCache('uid', authUser.uid);\n    };\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    signOut = () => {\n      cache.clearFromCache('uid', '');\n      Router.push('/signin');\n    };\n\n    signIn = (email, password) => {\n      this.props.firebase\n        .doSignInWithEmailAndPassword(email, password)\n        .then(res => {\n          const { uid } = res.user;\n          cache.saveToCache('uid', uid);\n          return uid;\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    };\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <Component {...this.props} authUser={authUser} signOut={this.signOut} />\n      );\n    }\n  }\n\n  return withFirebase(withAuthentication);\n};\n\nexport default withAuthentication;\n"]},"metadata":{},"sourceType":"module"}