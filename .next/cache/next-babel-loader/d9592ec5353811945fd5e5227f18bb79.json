{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/HOCs/Session/with-authorization.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import { withRouter } from 'react-router-dom';\n\nimport { compose } from 'redux';\nimport { withFirebase } from '../'; // import * as ROUTES from '../../constants/routes';\n\nimport { AuthUserContext } from '.';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push('/signin');\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return __jsx(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, authUser => condition(authUser) ? __jsx(Component, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })) : null);\n    }\n\n  }\n\n  return compose( // withRouter,\n  withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/HOCs/Session/with-authorization.js"],"names":["React","compose","withFirebase","AuthUserContext","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","firebase","auth","onAuthStateChanged","authUser","history","push","componentWillUnmount","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,YAAT,QAA6B,KAA7B,C,CACA;;AACA,SAASC,eAAT,QAAgC,GAAhC;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCP,KAAK,CAACM,SAAtC,CAAgD;AAE9CE,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CACdC,QAAQ,IAAI;AACV,YAAI,CAACT,SAAS,CAACS,QAAD,CAAd,EAA0B;AACxB,eAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD;AACF,OALa,CAAhB;AAOD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKR,QAAL;AACD;;AAEDS,IAAAA,MAAM,GAAG;AACP,aACE,MAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIJ,QAAQ,IACRT,SAAS,CAACS,QAAD,CAAT,GAAsB,MAAC,SAAD,eAAe,KAAKJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAsD,IAF1D,CADF;AAOD;;AAxB6C;;AA2BhD,SAAOT,OAAO,EACZ;AACAC,EAAAA,YAFY,CAAP,CAGLK,iBAHK,CAAP;AAID,CAhCD;;AAkCA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\n// import { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nimport { withFirebase } from '../';\n// import * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '.';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n      \n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push('/signin');\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          { authUser => \n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    // withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}