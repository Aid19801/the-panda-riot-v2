{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adrianthompson/Documents/with-redux-app/pages/_app.js\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport Firebase, { FirebaseContext } from '../HOCs'; // redux\n// firebase\n// mapbox\n// git gist\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore;\n      return __jsx(Provider, {\n        store: reduxStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(FirebaseContext.Provider, {\n        value: new Firebase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/home/adrianthompson/Documents/with-redux-app/pages/_app.js"],"names":["App","React","withReduxStore","Provider","Firebase","FirebaseContext","MyApp","props","Component","pageProps","reduxStore"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,IAAmBC,eAAnB,QAA0C,SAA1C,C,CAEA;AACA;AACA;AACA;;IAEMC,K;;;;;;;;;;;;;6BACM;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAER,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE,IAAIN,QAAJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAOD;;;;EAViBT,G;;AAapB,eAAeE,cAAc,CAACI,KAAD,CAA7B","sourcesContent":["import App from 'next/app';\nimport React from 'react';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport Firebase, { FirebaseContext } from '../HOCs';\n\n// redux\n// firebase\n// mapbox\n// git gist\n\nclass MyApp extends App {\n  render () {\n    const { Component, pageProps, reduxStore } = this.props\n    return (\n      <Provider store={reduxStore}>\n        <FirebaseContext.Provider value={new Firebase()}>\n          <Component {...pageProps} />\n        </FirebaseContext.Provider>\n      </Provider>\n    )\n  }\n}\n\nexport default withReduxStore(MyApp)\n"]},"metadata":{},"sourceType":"module"}